#!/bin/bash

r="\033[0;31m" # red
w="\033[0;37m" # white
g="\033[0;32m" # green
y="\033[1;33m" # yellow
x="\033[0m" # reset

if ! test "X$(basename -- "$0")" = "Xbash"; then
    echo "Usage: source $(basename "$0") [profile] [config]" >&2
    exit 1
fi

profile="${1:-}"
config_file=$(echo "${2:-${AWS_CONFIG_FILE:-~/.aws/config}}" | sed "s:~:$HOME:" );

export config_file

profiles=($(php -r "$(cat <<"EOL"
    $file = getenv('config_file');
    $list = array_keys(array_filter((array) @parse_ini_file($file, true)));
    $list = array_map(function($x) {return preg_replace('/^profile\s+/','',$x);}, $list );
    echo $list ? implode(PHP_EOL, $list).PHP_EOL : null;
EOL
)"))

updated=0

if [ -z $profile ]; then
    default_profile=$AWS_DEFAULT_PROFILE
elif [[ "-" = $profile ]]; then
    default_profile=""
    updated=2
else 
    for name in ${profiles[@]}; do
        if [[ "x$name" = "x$profile" ]]; then
            default_profile="$name"
            updated=1
            break; 
        fi
    done

    if [ -z $default_profile ]; then
        echo -e "${r}ERROR:${x} profile [${y}${profile}${x}] could not be found in [${y}${config_file}${x}] file." >&2
        return 1
    fi
fi

export AWS_CONFIG_FILE=$config_file
export AWS_DEFAULT_PROFILE=$default_profile

if [ $updated -eq 1 ]; then
    echo -e "${w}aws-switch:${g} profile switched${x}"
elif [ $updated -eq 2 ]; then
    echo -e "${w}aws-switch:${y} profile reset${x}"
fi

cat <<EOL

AWS_DEFAULT_PROFILE  : ${AWS_DEFAULT_PROFILE:-~}
AWS_CONFIG_FILE      : ${AWS_CONFIG_FILE:-~}
AWS_DEFAULT_REGION   : ${AWS_DEFAULT_REGION:-~}
AWS_DEFAULT_OUTPUT   : ${AWS_DEFAULT_OUTPUT:-~}

Configured profiles  : ${profiles[@]:-~}

EOL

unset config_file default_profile profiles profile name r g y w h x
